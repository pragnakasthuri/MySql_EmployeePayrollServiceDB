EMPLOYEE PAYROLL SERVICE

#UC 1 Ability to create a payroll service database

CREATE DATABASE payroll_service;

SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| payroll_service    |
| performance_schema |
| sys                |
+--------------------+

USE payroll_service;
Database changed

SELECT database();
+-----------------+
| database()      |
+-----------------+
| payroll_service |
+-----------------+

#UC 2 Ability to create a employee payroll table in the payroll service database to manage employee payrolls

CREATE TABLE employee_payroll
    -> (
    -> id      INT unsigned NOT NULL AUTO_INCREMENT,
    -> name    VARCHAR(150) NOT NULL,
    -> salary  double NOT NULL ,
    -> start   DATE NOT NULL,
    -> PRIMARY KEY (ID)
    -> );

DESCRIBE employee_payroll;
+--------+--------------+------+-----+---------+----------------+
| Field  | Type         | Null | Key | Default | Extra          |
+--------+--------------+------+-----+---------+----------------+
| id     | int unsigned | NO   | PRI | NULL    | auto_increment |
| name   | varchar(150) | NO   |     | NULL    |                |
| salary | double       | NO   |     | NULL    |                |
| start  | date         | NO   |     | NULL    |                |
+--------+--------------+------+-----+---------+----------------+

#UC 3 Ability to create employee payroll data in the payroll service database as part of CRUD Operation 

INSERT INTO employee_payroll (name, salary, start) VALUES
    -> ('Kim',   800000.00,  '2020-01-01'),
    -> ('John',  1000000.00, '2021-05-01'),
    -> ('Naina', 900000.00,  '2022-01-10');

#UC 4 Ability to retrieve all the employee payroll data that is added to payroll service database

SELECT * FROM employee_payroll;
+----+-------+---------+------------+
| id | name  | salary  | start      |
+----+-------+---------+------------+
|  1 | Kim   |  800000 | 2020-01-01 |
|  2 | John  | 1000000 | 2021-05-01 |
|  3 | Naina |  900000 | 2022-01-10 |
+----+-------+---------+------------+

#UC 5 Ability to retrieve salary data for a particular employee as well as all employees who have
joined in a particular data range from the payroll service database

SELECT * FROM employee_payroll WHERE name = 'Kim';
+----+------+--------+------------+
| id | name | salary | start      |
+----+------+--------+------------+
|  1 | Kim  | 800000 | 2020-01-01 |
+----+------+--------+------------+

SELECT salary FROM employee_payroll WHERE name = 'Kim';
+--------+
| salary |
+--------+
| 800000 |
+--------+

SELECT * FROM employee_payroll WHERE start BETWEEN CAST('2020-01-01' AS DATE) AND DATE(NOW());
+----+-------+---------+------------+
| id | name  | salary  | start      |
+----+-------+---------+------------+
|  1 | Kim   |  800000 | 2020-01-01 |
|  2 | John  | 1000000 | 2021-05-01 |
|  3 | Naina |  900000 | 2022-01-10 |
+----+-------+---------+------------+

SELECT * FROM employee_payroll WHERE start BETWEEN CAST('2021-01-01' AS DATE) AND DATE(NOW());
+----+-------+---------+------------+
| id | name  | salary  | start      |
+----+-------+---------+------------+
|  2 | John  | 1000000 | 2021-05-01 |
|  3 | Naina |  900000 | 2022-01-10 |
+----+-------+---------+------------+

#UC 6 Ability to add Gender to Employee Payroll Table and Update the Rows to reflect the correct Employee Gender

ALTER TABLE employee_payroll ADD gender CHAR(1) AFTER name;

DESCRIBE employee_payroll;
+--------+--------------+------+-----+---------+----------------+
| Field  | Type         | Null | Key | Default | Extra          |
+--------+--------------+------+-----+---------+----------------+
| id     | int unsigned | NO   | PRI | NULL    | auto_increment |
| name   | varchar(150) | NO   |     | NULL    |                |
| gender | char(1)      | YES  |     | NULL    |                |
| salary | double       | NO   |     | NULL    |                |
| start  | date         | NO   |     | NULL    |                |
+--------+--------------+------+-----+---------+----------------+

UPDATE employee_payroll SET gender = 'M' WHERE name = 'Kim' OR name = 'John';

UPDATE employee_payroll SET gender = 'F' WHERE name = 'Naina';

SELECT * FROM employee_payroll;
+----+-------+--------+---------+------------+
| id | name  | gender | salary  | start      |
+----+-------+--------+---------+------------+
|  1 | Kim   | M      |  800000 | 2020-01-01 |
|  2 | John  | M      | 1000000 | 2021-05-01 |
|  3 | Naina | F      |  900000 | 2022-01-10 |
+----+-------+--------+---------+------------+

#UC 7 Ability to find sum, average, min, max and number of male and female employees

SELECT SUM(salary) FROM employee_payroll GROUP BY gender;
+-------------+
| SUM(salary) |
+-------------+
|     1800000 |
|      900000 |
+-------------+

SELECT SUM(salary) FROM employee_payroll WHERE gender = 'M'  GROUP BY gender;
+-------------+
| SUM(salary) |
+-------------+
|     1800000 |
+-------------+

SELECT SUM(salary) FROM employee_payroll WHERE gender = 'F'  GROUP BY gender;
+-------------+
| SUM(salary) |
+-------------+
|      900000 |
+-------------+

SELECT AVG(salary) FROM employee_payroll WHERE gender = 'M'  GROUP BY gender;
+-------------+
| AVG(salary) |
+-------------+
|      900000 |
+-------------+

SELECT AVG(salary) FROM employee_payroll GROUP BY gender;
+-------------+
| AVG(salary) |
+-------------+
|      900000 |
|      900000 |
+-------------+

SELECT gender, AVG(salary) FROM employee_payroll GROUP BY gender;
+--------+-------------+
| gender | AVG(salary) |
+--------+-------------+
| M      |      900000 |
| F      |      900000 |
+--------+-------------+

SELECT gender, MIN(salary) FROM employee_payroll GROUP BY gender;
+--------+-------------+
| gender | MIN(salary) |
+--------+-------------+
| M      |      800000 |
| F      |      900000 |
+--------+-------------+

SELECT gender, MIN(salary) FROM employee_payroll WHERE gender = 'M' GROUP BY gender;
+--------+-------------+
| gender | MIN(salary) |
+--------+-------------+
| M      |      800000 |
+--------+-------------+

SELECT gender, MAX(salary) FROM employee_payroll WHERE gender = 'M' GROUP BY gender;
+--------+-------------+
| gender | MAX(salary) |
+--------+-------------+
| M      |     1000000 |
+--------+-------------+

SELECT MAX(salary) FROM employee_payroll WHERE gender = 'M' GROUP BY gender;
+-------------+
| MAX(salary) |
+-------------+
|     1000000 |
+-------------+

SELECT gender, COUNT(name) FROM employee_payroll GROUP BY gender;
+--------+-------------+
| gender | COUNT(name) |
+--------+-------------+
| M      |           2 |
| F      |           1 |
+--------+-------------+

#Practice

INSERT INTO employee_payroll (name, salary, start) VALUES
    -> ('Abraham',  1300000.00,  '2020-01-01'),
    -> ('Tara',  1100000.00,  '2019-01-01');

SELECT * FROM employee_payroll;
+----+---------+--------+---------+------------+
| id | name    | gender | salary  | start      |
+----+---------+--------+---------+------------+
|  1 | Kim     | M      |  800000 | 2020-01-01 |
|  2 | John    | M      | 1000000 | 2021-05-01 |
|  3 | Naina   | F      |  900000 | 2022-01-10 |
|  4 | Abraham | NULL   | 1300000 | 2020-01-01 |
|  5 | Tara    | NULL   | 1100000 | 2019-01-01 |
+----+---------+--------+---------+------------+

UPDATE employee_payroll SET gender = 'F' WHERE name = 'Tara';

SELECT * FROM employee_payroll;
+----+---------+--------+---------+------------+
| id | name    | gender | salary  | start      |
+----+---------+--------+---------+------------+
|  1 | Kim     | M      |  800000 | 2020-01-01 |
|  2 | John    | M      | 1000000 | 2021-05-01 |
|  3 | Naina   | F      |  900000 | 2022-01-10 |
|  4 | Abraham | NULL   | 1300000 | 2020-01-01 |
|  5 | Tara    | F      | 1100000 | 2019-01-01 |
+----+---------+--------+---------+------------+

UPDATE employee_payroll SET gender = 'M' WHERE name = 'Abraham';

SELECT * FROM employee_payroll;
+----+---------+--------+---------+------------+
| id | name    | gender | salary  | start      |
+----+---------+--------+---------+------------+
|  1 | Kim     | M      |  800000 | 2020-01-01 |
|  2 | John    | M      | 1000000 | 2021-05-01 |
|  3 | Naina   | F      |  900000 | 2022-01-10 |
|  4 | Abraham | M      | 1300000 | 2020-01-01 |
|  5 | Tara    | F      | 1100000 | 2019-01-01 |
+----+---------+--------+---------+------------+

#UC 8 
Ability to extend employee_payroll data to store employee information like employee phone, address and department

ALTER TABLE employee_payroll ADD phone_number VARCHAR(255) AFTER gender;
ALTER TABLE employee_payroll ADD address VARCHAR(255) AFTER phone_number;
alter table employee_payroll alter column Address set default 'Hyderabad';
ALTER TABLE employee_payroll ADD department VARCHAR(255) not null AFTER Address;
DESCRIBE employee_payroll;
+--------------+--------------+------+-----+-----------+----------------+
| Field        | Type         | Null | Key | Default   | Extra          |
+--------------+--------------+------+-----+-----------+----------------+
| id           | int unsigned | NO   | PRI | NULL      | auto_increment |
| name         | varchar(150) | NO   |     | NULL      |                |
| gender       | char(1)      | YES  |     | NULL      |                |
| phone_number | varchar(255) | YES  |     | NULL      |                |
| Address      | varchar(255) | YES  |     | Hyderabad |                |
| Department   | varchar(255) | NO   |     | NULL      |                |
| salary       | double       | NO   |     | NULL      |                |
| start        | date         | NO   |     | NULL      |                |
+--------------+--------------+------+-----+-----------+----------------+

select * from employee_payroll;
+----+---------+--------+--------------+-----------+------------+-----------+------------+-------------+------------+---------+------------+
| id | name    | gender | phone_number | address   | department | basic_pay | deductions | taxable_pay | income_tax | net_pay | start      |
+----+---------+--------+--------------+-----------+------------+-----------+------------+-------------+------------+---------+------------+
|  1 | Kim     | M      | NULL         | hyderabad | marketing  |      NULL |       NULL |        NULL |       NULL | 1000000 | 2020-01-01 |
|  2 | John    | M      | NULL         | hyderabad | sales      |      NULL |       NULL |        NULL |       NULL | 2000000 | 2021-05-01 |
|  3 | Naina   | F      | NULL         | hyderabad | sales      |      NULL |       NULL |        NULL |       NULL | 2000000 | 2022-01-10 |
|  4 | Abraham | M      | NULL         | hyderabad | marketing  |      NULL |       NULL |        NULL |       NULL | 2500000 | 2020-01-01 |
|  5 | Tara    | F      | NULL         | hyderabad | marketing  |      NULL |       NULL |        NULL |       NULL | 1500000 | 2019-01-01 |
|  8 | Bill    | M      | NULL         | hyderabad | marketing  |      NULL |       NULL |        NULL |       NULL | 2000000 | 2022-04-01 |
|  9 | Charlie | M      | NULL         | hyderabad | sales      |      NULL |       NULL |        NULL |       NULL | 3000000 | 2020-09-10 |
| 10 | Terissa | F      | NULL         | hyderabad | sales      |      NULL |       NULL |        NULL |       NULL | 2000000 | 2019-04-05 |
+----+---------+--------+--------------+-----------+------------+-----------+------------+-------------+------------+---------+------------+

#UC 9
Ability to extend employee_payroll table to have Basic Pay, Deductions, Taxable Pay, Income Tax, Net Pay

ALTER TABLE employee_payroll 
    -> ADD COLUMN basic_pay float AFTER gender,
    -> ADD COLUMN deductions float AFTER basic_pay,
    -> ADD COLUMN taxable_pay float AFTER deductions,
    -> ADD COLUMN income_tax float AFTER taxable_pay,
    -> ADD COLUMN net_pay float AFTER income_tax;

describe employee_payroll;
+--------------+--------------+------+-----+-----------+----------------+
| Field        | Type         | Null | Key | Default   | Extra          |
+--------------+--------------+------+-----+-----------+----------------+
| id           | int unsigned | NO   | PRI | NULL      | auto_increment |
| name         | varchar(150) | NO   |     | NULL      |                |
| gender       | char(1)      | YES  |     | NULL      |                |
| phone_number | varchar(255) | YES  |     | NULL      |                |
| address      | varchar(255) | YES  |     | hyderabad |                |
| department   | varchar(255) | NO   |     | NULL      |                |
| basic_pay    | float        | YES  |     | NULL      |                |
| deductions   | float        | YES  |     | NULL      |                |
| taxable_pay  | float        | YES  |     | NULL      |                |
| income_tax   | float        | YES  |     | NULL      |                |
| net_pay      | float        | YES  |     | NULL      |                |
| start        | date         | NO   |     | NULL      |                |
+--------------+--------------+------+-----+-----------+----------------+

#UC 10 Ability to make Terissa as part of Sales and Marketing Department

insert into employee_payroll (name, gender, net_pay, start, department) values 
    ('Terissa', 'F', 2000000.00, '2019-04-05', 'marketing');

select * from employee_payroll;
+----+---------+--------+--------------+-----------+------------+-----------+------------+-------------+------------+---------+------------+
| id | name    | gender | phone_number | address   | department | basic_pay | deductions | taxable_pay | income_tax | net_pay | start      |
+----+---------+--------+--------------+-----------+------------+-----------+------------+-------------+------------+---------+------------+
|  1 | Kim     | M      | NULL         | hyderabad | marketing  |      NULL |       NULL |        NULL |       NULL | 1000000 | 2020-01-01 |
|  2 | John    | M      | NULL         | hyderabad | sales      |      NULL |       NULL |        NULL |       NULL | 2000000 | 2021-05-01 |
|  3 | Naina   | F      | NULL         | hyderabad | sales      |      NULL |       NULL |        NULL |       NULL | 2000000 | 2022-01-10 |
|  4 | Abraham | M      | NULL         | hyderabad | marketing  |      NULL |       NULL |        NULL |       NULL | 2500000 | 2020-01-01 |
|  5 | Tara    | F      | NULL         | hyderabad | marketing  |      NULL |       NULL |        NULL |       NULL | 1500000 | 2019-01-01 |
|  8 | Bill    | M      | NULL         | hyderabad | marketing  |      NULL |       NULL |        NULL |       NULL | 2000000 | 2022-04-01 |
|  9 | Charlie | M      | NULL         | hyderabad | sales      |      NULL |       NULL |        NULL |       NULL | 3000000 | 2020-09-10 |
| 10 | Terissa | F      | NULL         | hyderabad | sales      |      NULL |       NULL |        NULL |       NULL | 2000000 | 2019-04-05 |
| 11 | Terissa | F      | NULL         | hyderabad | marketing  |      NULL |       NULL |        NULL |       NULL | 2000000 | 2019-04-05 |
+----+---------+--------+--------------+-----------+------------+-----------+------------+-------------+------------+---------+------------+

#UC 11 Create the corresponding tables as identified in the ER Diagram along with attributes

create table  company
    -> (
    -> id INT unsigned NOT NULL AUTO_INCREMENT,
    -> company_name    VARCHAR(150) NOT NULL,
    -> PRIMARY KEY (ID)
    -> );

describe company;
+--------------+--------------+------+-----+---------+----------------+
| Field        | Type         | Null | Key | Default | Extra          |
+--------------+--------------+------+-----+---------+----------------+
| id           | int unsigned | NO   | PRI | NULL    | auto_increment |
| company_name | varchar(150) | NO   |     | NULL    |                |
+--------------+--------------+------+-----+---------+----------------+

create table department
    -> (
    -> id INT unsigned NOT NULL AUTO_INCREMENT,
    -> dept_name VARCHAR(150) NOT NULL,
    -> PRIMARY KEY (ID)
    -> );

describe department;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int unsigned | NO   | PRI | NULL    | auto_increment |
| dept_name | varchar(150) | NO   |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+

mysql> create table payroll_details
    -> (employee_id int unsigned not null,
    -> basic_pay double not null,
    -> deductions double not null,
    -> taxable_pay double not null,
    -> 
    -> tax double not null,
    -> net_pay double not null,
    -> foreign key(employee_id)
    -> references employee_payroll(id) on delete cascade);
Query OK, 0 rows affected (0.04 sec)

mysql> describe payroll_details
    -> ;
+-------------+--------------+------+-----+---------+-------+
| Field       | Type         | Null | Key | Default | Extra |
+-------------+--------------+------+-----+---------+-------+
| employee_id | int unsigned | NO   | MUL | NULL    |       |
| basic_pay   | double       | NO   |     | NULL    |       |
| deductions  | double       | NO   |     | NULL    |       |
| taxable_pay | double       | NO   |     | NULL    |       |
| tax         | double       | NO   |     | NULL    |       |
| net_pay     | double       | NO   |     | NULL    |       |
+-------------+--------------+------+-----+---------+-------+
6 rows in set (0.01 sec)










